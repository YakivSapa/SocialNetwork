{"version":3,"file":"static/js/244.ff4366a2.chunk.js","mappings":"iLAGA,MAUA,EAVoBA,IAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACIC,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAACC,GAAIL,EAAMM,UAAWC,GAAWA,EAAQC,SAAWC,EAAAA,EAAEC,OAASD,EAAAA,EAAEE,OAAOR,SAAEJ,EAAMa,QACtF,ECHd,EAJiBb,IACNG,EAAAA,EAAAA,KAAA,OAAKI,UAAWG,EAAAA,EAAEI,QAAQV,SAAEJ,EAAMc,U,sDCE7C,MAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAerC,GAAeC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAjC,EAbwBlB,IAEhBG,EAAAA,EAAAA,KAAA,QAAMgB,SAAUnB,EAAMoB,aAAahB,UAC/BiB,EAAAA,EAAAA,MAAA,OAAKd,UAAWG,EAAAA,EAAEY,SAASlB,SAAA,EACvBD,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUZ,GAAcR,UAAWG,EAAAA,EAAEkB,SAAUf,KAAK,iBAAiBgB,YAAY,0BAE5H1B,EAAAA,EAAAA,KAAA,OAAAC,UAAKD,EAAAA,EAAAA,KAAA,UAAQI,UAAWG,EAAAA,EAAEoB,OAAO1B,SAAC,kBCuBlD,EA9BiBJ,IAEb,IAAI+B,EAAQ/B,EAAMgC,YAEdC,EAAkBF,EAAMG,QAAQC,KAAIC,IAAKjC,EAAAA,EAAAA,KAACkC,EAAU,CAACxB,KAAMuB,EAAEvB,KAAiBX,GAAIkC,EAAElC,IAAZkC,EAAElC,MAC1EoC,EAAmBP,EAAMQ,SAASJ,KAAIK,IAAKrC,EAAAA,EAAAA,KAACsC,EAAO,CAAC3B,QAAS0B,EAAE1B,SAAc0B,EAAEtC,MAMnF,OAAqB,IAAjBF,EAAM0C,QAAyBvC,EAAAA,EAAAA,KAACwC,EAAAA,GAAQ,CAACrC,GAAI,YAG7Ce,EAAAA,EAAAA,MAAA,OAAKd,UAAWG,EAAAA,EAAEwB,QAAQ9B,SAAA,EACtBD,EAAAA,EAAAA,KAAA,OAAKI,UAAWG,EAAAA,EAAEkC,aAAaxC,SAC1B6B,KAEL9B,EAAAA,EAAAA,KAAA,OAAKI,UAAWG,EAAAA,EAAE6B,SAASnC,UACvBiB,EAAAA,EAAAA,MAAA,OAAAjB,SAAA,CAAK,IAAEkC,EAAiB,UAE5BnC,EAAAA,EAAAA,KAAA,OAAKI,UAAWG,EAAAA,EAAEQ,KAAKd,UACnBD,EAAAA,EAAAA,KAAC0C,EAAc,CAAC1B,SAfP2B,IACjB9C,EAAM+C,YAAYD,EAAOE,eAAe,QAgBlC,E,cCXd,SAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAdmBnB,IACZ,CACHC,YAAaD,EAAMC,gBAGDmB,IACf,CACHJ,YAAcC,IACVG,GAASC,EAAAA,EAAAA,GAAmBJ,GAAgB,MAOpDK,EAAAA,EAFJ,CAGEC,E","sources":["Components/Dialogs/DialogItem/DialogItem.js","Components/Dialogs/Message/Message.js","Components/Dialogs/AddMessageForm/AddMessageForm.js","Components/Dialogs/Dialogs.js","Components/Dialogs/DialogsContainer.js"],"sourcesContent":["import s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div>\r\n            <NavLink to={path} className={navData => navData.isActive ? s.active : s.dialog}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n};\r\n\r\nexport default Message;","import { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.textForm}>\r\n                <div>\r\n                    <Field component={Textarea} validate={[required, maxLength50]} className={s.textarea} name=\"newMessageBody\" placeholder='Write a message...' />\r\n                </div>\r\n                <div><button className={s.button}>Send</button></div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);","import s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Navigate } from 'react-router-dom';\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    if (props.isAuth === false) return <Navigate to={\"/login\"} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div> {messagesElements} </div>\r\n            </div>\r\n            <div className={s.form}>\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { sendMessageCreator } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","path","id","_jsx","children","NavLink","to","className","navData","isActive","s","active","dialog","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","_jsxs","textForm","Field","component","Textarea","validate","required","textarea","placeholder","button","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","isAuth","Navigate","dialogsItems","AddMessageForm","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}